<div class="row p-2">
     <div class="col-10">
        <fieldset class="border border-secondary p-0">
            <legend>Report Generator</legend>
            <div class=" p-1">
                <form action="#" class="ui form tiny">
                    <div class="form-row">
                        <div class="form-group col-4">
                            <label for="inputEmail4">School</label>
                            <select class="form-control" id="school">
                                <option selected>Choose...</option>
                                <option></option>
                            </select>
                        </div>
                        <div class="col-3 form-group">
                            <label for="">Year :</label>
                            <select name="year" id="year" class="form-control">
                            
                            </select>
                        </div>
                        <div class="col-3 form-group">
                            <label for="">Class :</label>
                            <select name="class" id="class" class="form-control">
                                <option value="1">Form One</option>
                                <option value="2">Form Two</option>
                                <option value="3">Form Three</option>
                                <option value="4">Form Four</option>
                            </select>
                        </div>
                        <div class="col-2 pt-3 form-group">
                            
                            <button type="button" id="updateReportList" class="ui fluid mt-3 button tiny positive icon">
                                Generate <i class="icon cogs"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
            
        </fieldset>
    </div>
    <div class="col-2">
        <button class="btn btn-secondary btn-lg btn-block">New Report <i class="icon plus circle"></i></button>
    </div>
     <div class="col-12">
        <table id="schoolreporttable" class="table table-sm table-hover">
            <thead>
                <th>Student Name</th>
                <th>Scheme</th>
                <th>Scheme Type</th>
                <th>1st Term</th>
                <th>2nd Term</th>
                <th>3rd Term</th>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>
   
</div>
<style>
    table tbody tr{
        cursor: pointer;

    }
</style>
<script>
    $(document).ready(()=>{ 
        renderYears();

        //DataTable serverside rendering and add onchange for #year and #class and give each row a click event to open the report
        $('#schoolreporttable').DataTable({
            "processing": true,
            "serverSide": true,
            "ajax": {
                "url": BASE_URL+"/api/v1/asyncschoolreport",
                "data": {
                    "year": $('#year').val(),
                    "class": $('#class').val(),
                    "school": $('#school').val()
                }
            },
            "columns": [
                {"data": "StudentName"},
                {"data": "Scheme"},
                {"data": "SchemeType"},
                {"data": "1"},
                {"data": "2"},
                {"data": "3"}
            ],
            "columnDefs": [
                {
                    "targets": [3,4,5],
                    "render": function (data, type, row, meta) {
                        console.log(row)
                        return data;
                    }
                }
            ]
        });
        
        $('#updateReportList').click(()=>{
            $('#schoolreporttable').DataTable().ajax.reload();
        });
    
    

        /*let table = $("#schoolreporttable").DataTable({
        pageLength:50, responsive:true, dom:'Bfrtip', buttons: [ 'excel', 'csvHtml5',
        { extend: 'pdfHtml5', orientation:'landscape', pageSize: 'LEGAL' } ], })
        table.columns().every( function () { var that = this; $( 'input',
        this.footer() ).on( 'keyup change', function () { that .search( this.value )
        .draw(); } ); } ); */
    
    })

    async function renderYears(){
        //Render years from 2015 until current year and append to #year select element
        let currentYear = new Date().getFullYear();
        let years = [];
        for(let i = 2015; i <= currentYear; i++){
            years.push(i);
        }
        $("#year").empty();
        years.forEach(year => {
            $("#year").append(`<option value="${year}">${year}</option>`);
        } );
    }


</script>