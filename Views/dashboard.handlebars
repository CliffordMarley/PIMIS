<div class="row">
  <div class="col-lg-3 col-md-6 col-sm-6">
    <div class="card bg-warning card-stats">
      <div class="card-header card-header-warning card-header-icon">
        {{!-- <div class="card-icon">
          <i class="material-icons">wheelchair_pickup</i>
        </div> --}}
        <h5 class="card-category text-white">Active Social Dev Projects</h5>
        <hr>
        <h4 style="font-size:27px !important;font-weight:bold;" class="card-title text-white display-4">{{stats.projectCount}}</h4>
      </div>
      {{!-- <div class="card-footer">
                  <div class="stats">
                    <i class="material-icons text-danger">warning</i>
                    <a href="javascript:;">Since Inception</a>
                  </div>
                </div> --}}
    </div>
  </div>
  <div class="col-lg-3 col-md-6 col-sm-6">
    <div class="card card-stats bg-success">
      <div class="card-header card-header-success card-header-icon">
        {{!-- <div class="card-icon">
          <i class="material-icons">paid</i>
        </div> --}}
        <h5  class="card-category text-white">Value Of Social Dev Projects</h5>
        <hr>
        <h4 style="font-size:27px !important;font-weight:bold;" class="text-white card-title">{{formatCurrency stats.value_of_social_projects}} Billion</h4>
      </div>
      {{!-- <div class="card-footer">
                  <div class="stats">
                    <i class="material-icons">date_range</i> Last 24 Hours
                  </div>
                </div> --}}
    </div>
  </div>
  <div class="col-lg-3 col-md-6 col-sm-6">
    <div class="card card-stats bg-danger">
      <div class="card-header card-header-danger card-header-icon">
        {{!-- <div class="card-icon">
          <i class="material-icons">savings</i>
        </div> --}}
        <h5 class="card-category text-white">Active Commercial Investments<h5/>
        <hr>
        <h4 style="font-size:27px !important;font-weight:bold;" class="card-title text-white display-4">{{stats.investmentsCount}}</h4>
      </div>

    </div>
  </div>
  <div class="col-lg-3 col-md-6 col-sm-6">
    <div class="card card-stats bg-info">
      <div class="card-header card-header-info card-header-icon">
        {{!-- <div class="card-icon">
           <i class="material-icons">paid</i>
        </div> --}}
        <h5 class="card-category text-white">Value Of Commercial Investments</h5>
        <hr>
        <h4 style="font-size:27px !important;font-weight:bold;" class="card-title text-white display-4">MK{{stats.value_of_commercial_projects}} Billion</h4>
      </div>
    </div>
  </div>
  <div class="col-12">
    <hr>
  </div>
  <div class="col-6">
    <h4 class="bg-secondary p-1 text-center text-white">Project Funding By Sector</h4>
    <canvas id="project_by_sector" class="border border-secondary"  style="width:100%;height:300px;"></canvas>

  </div>
  <div class="col-6">
    <h4 class="bg-secondary p-1 text-center text-white">Investment Funding By Sector</h4>
    <canvas id="investment_by_sector" class="border border-secondary"  style="width:100%;height:300px;"></canvas>

  </div>
 
</div>
<div class="row d-none">
  <div class="col-12 p-4"></div>
   <div class="col-6 offset-3">
    <canvas id="place_holder" style="width:100%;height:100px !important;" class="border border-secondary"></canvas>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.0/chart.min.js"></script>

<script>
  var ctx1 = document.getElementById('project_by_sector').getContext('2d');
  var ctx2 = document.getElementById('investment_by_sector').getContext('2d');
  let ctx3 = document.getElementById('place_holder').getContext('2d');
  var Chart1,Chart2 ,Chart3
  $(document).ready(() => {

  GetStats()

  const data = {
  labels: [
    'Red',
    'Green',
    'Yellow',
    'Grey',
    'Blue'
  ],
  datasets: [{
    label: '',
    data: [11, 16, 7, 3, 14],
    backgroundColor: [
      'rgb(255, 99, 132)',
      'rgb(75, 192, 192)',
      'rgb(255, 205, 86)',
      'rgb(201, 203, 207)',
      'rgb(54, 162, 235)'
    ]
  }]
};
  const config = {
  type: 'polarArea',
  data: data,
  options: {}
};
  Chart3 = new Chart(ctx3, config);
    

  })


  async function GetStats(){
    
    try{
      let response = await fetch(`${BASE_URL}/dashboard/stats`)
      response = await response.json()
      RenderProjectFundingBySector(response.data.PBS)
      RenderInvestmentFundingBySector(response.data.IBS)
    }catch(err){
      console.log(err.message)
      //GetStats()
    }

  }

  function RenderProjectFundingBySector(PBS){
    let Headers = PBS.map(item=>{
      return item.Sector
    })
    let Values = PBS.map(item=>{
      return item.Number
    })
    console.log(Headers, Values)
    Chart1 = new Chart(ctx1, {
      type: 'bar',
      data: {
        labels: Headers,
        datasets: [{
          label: '',
          data: Values,
          backgroundColor: [
            'rgba(255, 99, 132)',
            'rgba(54, 162, 235)',
            'rgba(255, 206, 86)',
            'rgba(75, 192, 192)',
            'rgba(153, 102, 255)',
            'rgba(255, 159, 64)'
          ],
          borderColor: [
            'rgba(255, 99, 132)',
            'rgba(54, 162, 235)',
            'rgba(255, 206, 86)',
            'rgba(75, 192, 192)',
            'rgba(153, 102, 255)',
            'rgba(255, 159, 64)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  }

  function RenderInvestmentFundingBySector(IBS){
    let Headers = IBS.map(item=>{
      return item.Sector
    })
    let Values = IBS.map(item=>{
      return item.Number
    })
    console.log(Headers, Values)
    Chart2 = new Chart(ctx2, {
      type: 'bar',
      data: {
        labels: Headers,
        datasets: [{
          label: 'INVESTMENT FUNDING BY SECTOR',
          data: Values,
          backgroundColor: [
            'rgba(255, 99, 132)',
            'rgba(54, 162, 235)',
            'rgba(255, 206, 86)',
            'rgba(75, 192, 192)',
            'rgba(153, 102, 255)',
            'rgba(255, 159, 64)'
          ],
          borderColor: [
            'rgba(255, 99, 132)',
            'rgba(54, 162, 235)',
            'rgba(255, 206, 86)',
            'rgba(75, 192, 192)',
            'rgba(153, 102, 255)',
            'rgba(255, 159, 64)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  }
</script>
