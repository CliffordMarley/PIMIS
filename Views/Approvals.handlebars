<div class="row">
  {{!-- <div class="col-12">
        <h4 class="p-1 bg-dark text-center text-white">APPROVALS</h4>
    </div>
    <div class="col-12"><hr></div> --}}
  <div class="col-12">

    <div class="tabPanel-widget">
      <label for="tab-1" tabindex="0"></label>
      <input id="tab-1" type="radio" name="tabs" checked="true" aria-hidden="true">
      <h2>New Applications</h2>
      <div>
        <div class="row">
          <div class="text-right col-12 my-2">
          <button onclick="ApproveSelected('projects')" class="icon ui button d-inline positive tiny">Approve Selected <i class="icon check circle"></i>
            </button> 
          <button onclick="RejectSelected('projects')" class="icon ui button d-inline negative tiny">Reject Selected <i class="icon text-white close"></i></button>
          </div>
        </div>
        <table class="table table-sm table-bordered" id="new_projects_table">
          <thead>
            <th>REF_ID</th>
            <th style="width:50% !important;">APPLICANT_NAME</th>
            <th>PROJECT_DESCRIPTION</th>
            <th>SECTOR</th>
            <th>DISTRICT</th>
            <th>AMOUNT</th>
            <th>DATE_APPLIED</th>
            <th></th>
            <th></th>
            <th></th>
          </thead>
          <tbody>
            {{#each Projects}}
              <tr>
                <td>{{this.PID}}</td>
                <td>{{this.ApplicantName}}</td>
                <td>{{this.ProjectDescription}}</td>
                <td>{{this.Sector}}</td>
                <td>{{this.DistrictName}}</td>
                <td>{{formatCurrency this.AmountRequested}}</td>
                <td>{{dateFormat this.ApplicationDate}}</td>
                <td><button onclick="PromptApproval('{{this.PID}}', 'Project')" class="btn btn-sm btn-primary"><i
                      class="fa fa-check-circle" aria-hidden="true"></i></button></td>
                <td><a onclick="RejectPrompt('{{this.PID}}', 'Project')" class="btn btn-sm btn-danger"><i
                      class="fa fa-times-circle" aria-hidden="true"></i></a></td>
                <td>
                  {{!-- Bootstrap checkbox --}}
                  <input type="checkbox"  name="projectsCheckbox" value="{{this.PID}}">
                </td>
              </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
      <label for="tab-2" tabindex="0"></label>
      <input id="tab-2" type="radio" name="tabs" aria-hidden="true">
      <h2>New Investments</h2>
      <div>
        <div class="row">
          <div class="text-right col-12 my-2">
          <button onclick="ApproveSelected('investments')" class="icon ui button d-inline positive tiny">Approve Selected <i class="icon check circle"></i>
            </button> 
          <button onclick="RejectSelected('investments')" class="icon ui button d-inline negative tiny">Reject Selected <i class="icon text-white close"></i></button>
          </div>
        </div>
        <table class="table table-sm table-bordered" id="new_investments_table">

        </table>
      </div>
      <label for="tab-3" tabindex="0"></label>
      <input id="tab-3" type="radio" name="tabs" aria-hidden="true">
      <h2>New Bursary</h2>
      <div>
        <div class="row">
          <div class="text-right col-12 my-2">
          <button onclick="ApproveSelected('bursary')" class="icon ui button d-inline positive tiny">Approve Selected <i class="icon check circle"></i>
            </button> 
          <button onclick="RejectSelected('bursary')" class="icon ui button d-inline negative tiny">Reject Selected <i class="icon text-white close"></i></button>
          </div>
        </div>
        <table class="table table-sm table-bordered" id="new_bursary_table">
          <thead>
            <th>Student_Name</th>
            <th>Gender</th>
            <th>Secondary_School_Name</th>
            <th>Status</th>
            <th>Current_Fees</th>
            {{!-- <th>Conduct</th> --}}
            <th>District</th>
            <th>Scheme</th>
            <th></th>
            <th></th>
            <th></th>
          </thead>
          <tbody>
            {{#each Bursaries}}
              <tr>
                <td>{{this.StudentName}}</td>
                <td>{{this.Gender}}</td>
                <td>{{this.SecondarySchool}}</td>
                <td>{{this.Status}}</td>
                <td>{{formatCurrency this.CurrentFees}}</td>
                {{!-- <td>{{this.StudentConduct}}</td> --}}
                <td>{{this.DistrictOfOrigin}}</td>
                <td style="width:30% !important;">{{this.SchemeName}}</td>
                <td><button onclick="PromptApproval('{{this.ID}}', 'Bursary')" class="btn btn-sm btn-primary"><i
                      class="fa fa-check-circle" aria-hidden="true"></i></button></td>
                <td><a onclick="RejectPrompt('{{this.ID}}', 'Bursary')" class="btn btn-sm btn-danger"><i
                      class="fa fa-times-circle" aria-hidden="true"></i></a></td>
                      <td>
                  {{!-- Bootstrap checkbox --}}
                  <input type="checkbox"  name="bursariesCheckbox" value="{{this.ID}}">
                </td>
              </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>

  </div>
  <div class="col-12">
    <div id="justify_rej_project" class="modal">
      <p class="p-1 px-3 bg-dark text-white txt-center">JUSTIFY PROJECT APPLICATION REJECTION</p>
      <hr>
      <form class="row">
        <div class="col-12 form-group">
          <textarea name="Justification" placeholder="Type Reason Here..." id="Justification" cols="30"
            rows="5"></textarea>
        </div>
        <div class="col-12 text-right">
          <button class="btn btn-sm btn-dark">Reject Now</button>
        </div>
      </form>
      <div class="text-right">
        <a style="pt-4 btn btn-sm pl-4 float-right" href="#" rel="modal:close">Dismiss</a>
      </div>
    </div>
  </div>
</div>
<div class="row">

</div>
<script>
  let projects = []
  let bursaries = [] 
  let investments = [];

  let submissionApproved = false;
  let pushToArray = (entity, id)=>{
    if(entity == 'projects'){
        //Check if projects array already contains the id
        projects.includes(id) ? projects.splice(projects.indexOf(id), 1) : projects.push(id);
        console.log(projects)
    }

    if(entity == 'bursaries'){
        //Check if projects array already contains the id
        bursaries.includes(id) ? bursaries.splice(bursaries.indexOf(id), 1) : bursaries.push(id);
        console.log(bursaries)
    }

    if(entity == 'investments'){
        //Check if projects array already contains the id
        investments.includes(id) ? investments.splice(investments.indexOf(id), 1) : investments.push(id);
        console.log(investments)
    }
  }

  $(()=>{
    //Listen for change even for projectsCheckbox
    $('input[name="projectsCheckbox"]').change(function(){
      if($(this).is(':checked')){
        pushToArray('projects', $(this).val());
      }else{
        projects.splice(projects.indexOf($(this).val()), 1);
        console.log(projects)
      }
    }); //End of projectsCheckbox change event

    $('input[name="bursariesCheckbox"]').change(function(){
      if($(this).is(':checked')){
        pushToArray('bursaries', $(this).val());
      }else{
        bursaries.splice(bursaries.indexOf($(this).val()), 1);
        console.log(bursaries)
      }
    }); //End of projectsCheckbox change event

    $('input[name="investmentsCheckbox"]').change(function(){
      if($(this).is(':checked')){
        pushToArray('investments', $(this).val());
      }else{
        investments.splice(investments.indexOf($(this).val()), 1);
        console.log(investments)
      }
    }); //End of projectsCheckbox change event
  })

  let ApproveSelected =  (entity)=>{
    const message = "Are you sure you would like to approve the selected "+entity+"?";
    PromptAnything(message, async res=>{
      if(res){
          try{
            let options = {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                entity,
                Ids: entity == 'projects' ? projects : entity == 'bursaries' ? bursaries : entity == 'investments' ? investments : []
              })
            }
            console.log(options)
            let response = await fetch(BASE_URL+"/api/v1/approvals/bulk/"+entity+"/1", options)
            response = await response.json()
            if(response.status == 'success'){
              swal('Completed!','Bulk Approval was Successful!', 'success')
              setTimeout(()=>{
                location.reload()
              },2000)
            }else{
              swal('Approval Failed!',response.message, 'error')
            }
          }catch(err){
            console.log(err)
          }
      }
    })
  }

 let RejectSelected =  (entity)=>{
    const message = "Are you sure you would like to reject the selected "+entity+"?";
    BulkRejectPrompt(async res=>{
      if(res.status){
          try{
            let options = {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                entity,
                Ids: entity == 'projects' ? projects : entity == 'bursaries' ? bursaries : entity == 'investments' ? investments : [],
                Justification: res.Justification
              })
            }
            console.log(options)
            let response = await fetch(BASE_URL+"/api/v1/approvals/bulk/"+entity+"/2", options)
            response = await response.json()
            if(response.status == 'success'){
              swal('Completed!','Bulk rejection was successful!', 'success')
              setTimeout(()=>{
                location.reload()
              },2000)
            }else{
              swal('Process Failed!',response.message, 'error')
            }
          }catch(err){
            console.log(err)
          }
      }
    })
  }


</script>
<style>
  body {
    padding: 1rem;
  }

  dt {
    font-weight: bold;
  }

  dl {
    margin-bottom: 50px;
  }

  #bug:target {
    outline: 4px solid #ccc;
  }

  #new_projects_table thead th,
  #new_bursary_table thead th {
    font-size: 13px !important;
    text-transform: uppercase !important;
  }

  #new_projects_table tbody td,
  #new_bursary_table tbody td {
    font-size: 13px !important;
  }

  #Justification {
    width: 100%;
    padding: 5px;
    bordder-radius: 5px/5px;
  }

  /**
 * tab panel widget
 */
  .tabPanel-widget {
    position: relative;
    /* containing block for headings (top:0) */
    background: #999;
  }

  /**
 * because labels come first in source order - we use z-index to move them in front of the headings
 */
  .tabPanel-widget>label {
    position: absolute;
    z-index: 1;
  }

  /**
 * labels and headings must share same values so grouping declarations in this rule prevents async edits (risk of breakage)
 * line-height == height -> vertical centering
 * the width dictates the offset for all headings but the first one: left offset = width * number of previous heading(s)
 * note that width and offset of label/heading pair can be customized if necessary
 */

  .tabPanel-widget>label,
  .tabPanel-widget>h2 {
    font-size: 1.1em;
    width: 9em;
    height: 2em;
    line-height: 2em;
  }

  /**
 * position:relative is for the markers (the down arrow in tabs)
 */
  .tabPanel-widget>h2 {
    position: relative;
    margin: 0;
    text-align: center;
    background: #999;
    color: #fff;
  }

  .tabPanel-widget>label {
    border-right: 1px solid #fff;
  }

  /**
 * all first level labels and headings after the very first ones 
 */
  .tabPanel-widget>label~label,
  .tabPanel-widget>h2~h2 {
    position: absolute;
    top: 0;
  }


  /**
 * We target all the label/heading pairs
 * we increment the :nth-child() params by 4 as well as the left value (according to "tab" width)
 */

  .tabPanel-widget label:nth-child(1),
  .tabPanel-widget h2:nth-child(3) {
    left: 0em;
  }

  .tabPanel-widget label:nth-child(5),
  .tabPanel-widget h2:nth-child(7) {
    left: 9em;
  }

  .tabPanel-widget label:nth-child(9),
  .tabPanel-widget h2:nth-child(11) {
    left: 18em;
  }

  /**
 * we visually hide all the panels
 * https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
 */
  .tabPanel-widget input+h2+div {
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
  }

  /**
 * we reveal a panel depending on which control is selected 
 */
  .tabPanel-widget input:checked+h2+div {
    position: static !important;
    padding: 1em !important;
    height: auto !important;
    width: auto !important;
  }

  /**
 * shows a hand cursor only to pointing device users
 */
  .tabPanel-widget label:hover {
    cursor: pointer;
  }

  .tabPanel-widget>div {
    background: #f0f0f0;
    padding: 1em;
  }

  /**
 * we hide radio buttons and also remove them from the flow
 */
  .tabPanel-widget input[name="tabs"] {
    opacity: 0;
    position: absolute;
  }


  /** 
 * this is to style the tabs when they get focus (visual cue)
 */

  .tabPanel-widget input[name="tabs"]:focus+h2 {
    outline: 1px dotted #000;
    outline-offset: 10px;
  }


  /**
 * reset of the above within the tab panel (for pointing-device users)
 */
  .tabPanel-widget:hover h2 {
    outline: none !important;
  }

  /**
 * visual cue of the selection
 */
  .tabPanel-widget input[name="tabs"]:checked+h2 {
    background: #333;
  }

  /**
 * the marker for tabs (down arrow)
 */
  .tabPanel-widget input[name="tabs"]:checked+h2:after {
    content: '';
    margin: auto;
    position: absolute;
    bottom: -10px;
    left: 0;
    right: 0;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #333;
  }

  /**
 * Make it plain/simple below 45em (stack everything)
 */
  @media screen and (max-width: 45em) {

    /* hide unecessary label/control pairs */
    .tabPanel-widget label,
    .tabPanel-widget input[name="tabs"] {
      display: none;
    }

    /* reveal all panels */
    .tabPanel-widget>input+h2+div {
      display: block !important;
      position: static !important;
      padding: 1em !important;
      height: auto !important;
      width: auto !important;
    }

    /* "unstyle" the heading */
    .tabPanel-widget h2 {
      width: auto;
      position: static !important;
      background: #999 !important;
    }

    /* "kill" the marker */
    .tabPanel-widget h2:after {
      display: none !important;
    }

  }

</style>
